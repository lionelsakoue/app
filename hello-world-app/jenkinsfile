pipeline {
    agent any

    parameters {
        string(name: 'GIT_BRANCH', defaultValue: 'feature', description: 'Git branch to build from')
        string(name: 'DOCKER_TAG', defaultValue: 'latest', description: 'Tag for the Docker image')
    }

    environment {
        // Full registry path including project ID and image name
        DOCKER_IMAGE = "gcr.io/practice-422202/hello-world-app:${params.DOCKER_TAG}"
        DOCKER_REGISTRY = 'gcr.io'  // GCR registry
        REGISTRY_CREDENTIALS = 'docker-credentials-id'  // Jenkins credentials ID for Docker Registry
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "${params.GIT_BRANCH}", url: 'https://github.com/lionelsakoue/app.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image with the correct name and tag
                    docker.build("${DOCKER_IMAGE}")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Log in to the Docker registry and push the image
                    docker.withRegistry("https://${DOCKER_REGISTRY}", "${REGISTRY_CREDENTIALS}") {
                        docker.image("${DOCKER_IMAGE}").push()
                    }
                }
            }
        }

        stage('Notify') {
            steps {
                // Add notifications here (e.g., Slack, email)
                echo 'Build and deployment completed'
            }
        }
    }

    post {
        failure {
            // Notify on failure
            echo 'Build or deployment failed'
        }
    }
}
